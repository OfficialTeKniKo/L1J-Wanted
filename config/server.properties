#-------------------------------------------------------------
# Server config
#-------------------------------------------------------------

# 싱글, 멀티 모두 디폴트인 채(변경 불요)
# Bind ip of the gameserver, use * to bind on all available IPs
GAME_SERVER_NAME = *
LOGIN_SERVER_PORT = 2000
LOGIN_SERVER_ADDRESS = 127.0.0.1
# LOGIN_SERVER_ADDRESS = 192.168.178.55

# Login and password must be changed, but do not change if you do not know
# Database info
DB_DRIVER = com.mysql.jdbc.Driver
DB_URL = jdbc:mysql://localhost/l1j_remastered?useUnicode=true&characterEncoding=UTF-8
#DB_URL = jdbc:mysql://localhost/linoffice?useUnicode=true&characterEncoding=UTF-8
#DB_URL = jdbc:mysql://localhost/l1j-remastered_v2?useUnicode=true&characterEncoding=UTF-8
DB_LOGIN = root
DB_PASSWORD = 

# Connection pool to use
# The minimum/maximum values that are used from server to db
# default min:5/max:100
# 32/126 appropriate for smooth DB access
DB_POOL_MIN = 32
DB_POOL_MAX = 126

# GeneralThreadPool (Default:512 / Max:1024)
# set the thread SCV role, that is, the total number of Java threads to be used
# The higher the better, but varies depending on the computer specifications
# Users: 1024 for more than 500 people, 512 for less than 500 people
# CPU: Xeon E5645/RAM: 64GB standard 1024
SCHEDULED_CORE_POOLSIZE = 512

# 사용하는 thread 풀(추천=2)
# GeneralThreadPoolType:
# 0: 풀을 사용하지 않는 통상 Thread(이전과 같은 처리)
# 1: 지정한 수의 thread를 사용해 돌려 태스크를 처리
# 2: 복수의 thread로 태스크를 처리합니다만, 만약 처리의 종료하고 있는 thread가 있으면,
#          그 thread를 재이용합니다.  
# GeneralThreadPoolSize:
# GeneralThreadPoolType에"1"을 지정했을 경우의 thread의 수

# Thread pool to use (recommended = 2)
# GeneralThreadPoolType:
# 0: Normal thread that does not use pool (same process as before)
# 1: Run the task using the specified number of threads
# 2: The task is processed by multiple threads, but if there is a thread that has finished processing, reuse that thread.
# GeneralThreadPoolSize:
# GeneralThreadPoolType: Number of threads when "1" is specified for GeneralThreadPoolType 
GeneralThreadPoolType = 2
GeneralThreadPoolSize = 0
IoThreadPoolSize = 4

# Client's language 0. US 3. Taiwan 4. Janpan 5. China
# Has no use, used only as info
CLIENT_LANGUAGE = 0

# Set the time zone JST: Japan Standard Time, KST: Korea Standard Time, CDT: Northamerica Standard Time, Europe/Berlin: Europe
TIME_ZONE = Europe/Berlin

# DNS의 역당겨
# true: DNS의 역인 나무를 실시한다
# false: DNS의 역인 나무를 실시하지 않는다
# reverse DNS pull
# true: do reverse DNS trees
# false: don't do reverse DNS trees
HOSTNAME_LOOKUPS = false

# 클라이언트로부터 패킷이 보내져 오지 않았던 경우의 자동 절단 할 때까지의 시간(분 )
# 0-35791(0을 지정하면(자) 자동 절단 하지 않는다)
# Time in minutes until automatic disconnection when no packets have been sent from the client
# 0-35791 (If 0 is specified, auto truncation is not performed)
AUTOMATIC_KICK = 1

# 맵 파일을 캐쉬할까 true or false
# 유효하게 하면(자),. /data/mapcache/에 캐쉬가 작성되고
# 서버 기동시의 맵 read 속도가 2~5배정도로 된다
# Cache map files true or false
# If enabled,. A cache is written to /data/mapcache/
# Increases map reading speed by 2 to 5 times when starting the server
CACHE_MAP_FILES = true

# 무기·방어용 기구의 엔챤트 로그를 남기는 강화수. 10을 지정하면(자)+10가 되었을 때의 정보를 로그에 남긴다.
# 단  0이외를 지정하면(자), 지정한 값에 관계없이 안전 강화권이+0의 무기·방어용 기구의 엔챤트는 로그에 남는다.
# 0(을)를 지정하면(자) 일절 로그를 남기지 않는다.
# Enchantments that leave enchantment logs for weapons and defense devices. If 10 is specified, the information when +10 is reached is recorded in the log.
# However, if a value other than 0 is specified, the enchantment of a weapon/defensive mechanism with a +0 safety reinforcement ticket will remain in the log regardless of the specified value.
# If 0 is specified, no log is left.
LOGGING_WEAPON_ENCHANT = 10
LOGGING_ARMOR_ENCHANT = 9

# 채팅 로그의 설정
# 통상 채팅 :NORMAL WHISPER
# 절규 :SHOUT
# 전체 채팅 :WORLD
# 혈맹 채팅 :CLAN
# 파티 채팅 :PARTY
# 연합 채팅 :COMBINED
# 채팅 파티 :CHAT_PARTY
# Chat log settings
# Normal chat :NORMAL WHISPER
# Scream : SHOUT
# Full chat: WORLD
# Clan Chat: CLAN
# Party chat :PARTY
# United Chat :COMBINED
# chat party :CHAT_PARTY
LOGGING_CHAT_NORMAL = false
LOGGING_CHAT_WHISPER = false
LOGGING_CHAT_SHOUT = false
LOGGING_CHAT_WORLD = false
LOGGING_CHAT_CLAN = false
LOGGING_CHAT_PARTY = false
LOGGING_CHAT_COMBINED = false
LOGGING_CHAT_CHAT_PARTY = false

#필요에 따라서 변경
# Useable values: "true" - "false", use this option to choose whether accounts will be created 
# automatically or not.  If not, you have to put it in the logins.txt in the data folder
# change as needed
# Useable values: "true" - "false", use this option to choose whether accounts will be created
# automatically or not. If not, you have to put it in the logins.txt in the data folder
AUTO_CREATE_ACCOUNTS = true

# 최대 수용 인원(필요에 따라서 변경)
# Define how many players are allowed to play simultaneously on your server.
# Maximum occupancy (change as needed)
# Define how many players are allowed to play simultaneously on your server.
MAX_ONLINE_USERS = 1000

# 접속 대기열 사용 여부(최대 접속 인원수에 도달할시 대기열 QUEUE에 등록 / 대기열 순번대로 접속처리)
# Whether to use the access queue (register to the queue when the maximum number of connections is reached / process connections in queue order)
ACCESS_STANBY = true

# 오브젝트 정보를 클라이언트에 송신하는 범위
# -1(이)라면 지금까지 대로 화면내만
# The scope to send object information to the client
# If -1, only within the screen as before
PC_RECOGNIZE_RANGE = -1

# 캐릭터 정보(F5~12에 의한 쇼트 컷 키나 HP바의 위치등 )를
# 서버측에서 관리할까 true or false
# Character information (short cut keys by F5-12, HP bar position, etc.)
# Server-side management true or false
CHARACTER_CONFIG_IN_SERVER_SIDE = true

# 캐릭터 저장 딜레이 설정(단위: 분)
# Set character save delay (unit: minutes)
AUTO_CHAR_SAVE_TIME = 10

# 2PC(동일 IP로부터의 동시 접속)를 허가할까 true or false
# Allow 2 PCs (simultaneous access from the same IP) true or false
ALLOW_2PC = true

# IP당 동시 접속 허용 범위(기본값 2)
# Allowed simultaneous access per IP (default 2)
ALLOW_2PC_IP_COUNT = 5

# HDD당 동시 접속 허용 범위(기본값 2)
# Permissible range of simultaneous access per HDD (default 2)
ALLOW_2PC_HDD_COUNT = 5

# 계정당 개방 가능한 캐릭터 슬롯 수
# Number of openable character slots per account
CHARACTER_SLOT_MAX_COUNT = 8

# 레벨 다운을 허용 하는 범위(죽어 인상 검출)
# 과거 최고 레벨과 현재의 레벨의 차이가, 설정된 값을 넘으면(자) 절단 된다.
# 이후, 그 캐릭터에서는 로그인할 수 없다. 0으로 설정하면(자) 기능 OFF.
# 예) LevelDownRange가 10의 경우, 레벨 50의 캐릭터가 레벨 40 이하가 되면(자) 절단 된다.
# Range that allows level down (detection of dead impressions)
# If the difference between the previous high level and the current level exceeds the set value, it is cut off.
# After that, the character cannot log in. If set to 0, the function is OFF.
# Example) If LevelDownRange is 10, a character at level 50 will be cut off when it reaches level 40 or lower.
LEVEL_DOWN_RANGE = 10

# 데이타베이스 자원 리크 검출 기능
# 디버그용 옵션. 유효하게 하면(자), 데이타베이스의 자원 리크를 감시해, 검출했을 경우는 로그에 경고를 출력한다.  true or false
# Database resource leak detection function
# Options for debugging. When enabled, it monitors database resource leaks and outputs a warning to the log when detected. true or false
DETECT_DB_RESOURCE_LEAKS = false

# WellKnownPort 제한(해당 포트 이하로 접속시 차단)
# 0번 ~ 1023번 : 잘 알려진 포트(well-known port / 예약 포트)
# Restrict WellKnownPort (block when accessing below the corresponding port)
# 0 ~ 1023: well-known port / reserved port
WELLKNOWN_PORT = 1023

# 최대 수신 패킷 사이즈(패킷 공격 의심)
# Maximum received packet size (suspicion of packet attack)
RECEIVE_PACKET_LIMIT_SIZE = 5120

# 최대 수신 패킷 사이즈 연속 오버
# Maximum received packet size consecutively over
RECEIVE_PACKET_OVER_COUNT = 3

# 옵코드 출력 여부(C패킷, S패킷, PROTO패킷)
# Whether to output opcode (C packet, S packet, PROTO packet)
OPCODES_PRINT_C = false
OPCODES_PRINT_S = false
PROTO_CLIENT_CODE_FIND = true
DEBUG_SERVER = true
OPCODES_ONLY_HEADER = true

# 클라이언트 함수 로그 출력 여부
# Whether to output client function logs
CLIENT_FUNCTION_LOG_PRINT = true

# 커넥션 모니터 시간(단위: 초)
# 모니터 시간 동안 아이피당 커넥션 횟수 오버시 벤
# 커넥션 열리고 3초뒤에 공격(디도스)이 들어옴
# Connection monitor time (unit: seconds)
# If the number of connections per IP is exceeded during the monitor time, ben
# Attack (DDoS) comes in 3 seconds after connection is opened
ACCEPT_OVER_MONITOR_INTERVAL = 10
ACCEPT_OVER_LIMIT_COUNT = 10

# 서버 오픈대기
# Waiting for server open
STANDBY_SERVER = false

# IP당계정생성제한횟수(기본값2)= 연동망이아니라면 기본값 
# Limit number of account creation per IP (default 2) = Default value if not interlocked network
CREATE_IP_ACCOUNT_COUNT = 6

# HDD당계정생성제한횟수(기본값2)= 연동망이아니라면 기본값 
# Limited number of account creation per HDD (default 2) = Default value if not interlocked network
CREATE_HDD_ACCOUNT_COUNT = 3

# 캐릭터 비밀번호 사용여부 false 사용안함 / true 사용함
# Use character password false Do not use / true Use
SECOND_PASSWORD_USE = false

# 로그인 방식(true 접속기 / false 클라이언트)
# Login method (true connector / false client)
LOGIN_TYPE = true

# 아이피 승인 시스템 여부(한국 인터넷 진흥원 기준 / 해외 아이피 차단)
# IP approval system (based on Korea Internet & Security Agency / foreign IP blocking)
IP_PROTECT = false

# 아이피 승인 시스템 한국 인터넷 진흥원 API 발급키(encoding)
# https://www.data.go.kr/data/15094277/openapi.do 에서 신청 후 발급
# IP approval system Korea Internet & Security Agency API issuance key (encoding)
# Issued after applying at https://www.data.go.kr/data/15094277/openapi.do
IP_INFORMATION_API_KEY = %2BaJsH73n2oarvDBoOfEsObXKBfTVQkNvEf020XA4vb9n1Om7BQ2XQeWt167iPJOW6YnoX7lIaXyMiT9BRXTCoQ%3D%3D

# 리스타트 후 재접속 딜레이
# Reconnect delay after restart
RESTART_ENTER_WORLD_INTERVAL = 4000

# 개발환경 접속 제한(관리자 계정 외 접속불가)
# Restrict access to the development environment (no access other than the administrator account)
CONNECT_DEVELOP_LOCK = false

# 이익추구(영리 OR 비영리) 서버 설정(후원 관련 시스템 사용 여부)
# Profit-seeking (for-profit or non-profit) server setting (whether or not to use a sponsor-related system)
PROFIT_SERVER_ACTIVE = true

PALADIN_ACTIVE = false

